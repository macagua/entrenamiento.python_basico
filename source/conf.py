# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.append(os.path.abspath('sphinxext'))


# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project_namecode = 'entrenamiento.python_basico'
project_short_name = 'programación en Python - Nivel básico'
project = project_short_name[0].capitalize() + project_short_name[1:39]
project_name = project_namecode.replace(".", "")
project_details = 'Materiales del entrenamiento de {0}'.format(project_short_name)
publisher = 'Leonardo J. Caballero G.'
years = '2014 - 2022'
copyright = '{0}, {1}'.format(years, publisher)
author = 'Leonardo J. Caballero G.'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version
version = '3'
# The full version, including alpha/beta/rc tags
release = '3.0'


# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '5.1.1'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.viewcode',
    'sphinx_immaterial'
]

# Options for the linkcheck builder
# Ignore localhost
linkcheck_ignore = [
    r'http://localhost:\d+/',
    r'http://localhost:8080\d+/',
    r'http://localhost:8080',
    r'http://127.0.0.1:8080',
    r'http://whatever.herokuapp.com',
    r'http://example.com/news',
    r'http://example.com\d+/',
]
linkcheck_anchors = False
linkcheck_timeout = 30

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = {
    '.rst': 'restructuredtext',
}

# The master toctree document.
root_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'es'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
today_fmt = '%d de %B de %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
# exclude_patterns = ['index_latex.rst']

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
show_authors = True

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A string of reStructuredText that will be included at the end of every 
# source file that is read. 
rst_epilog = """
.. _`CodigoFacilito.com`: https://codigofacilito.com/
.. |psf| replace:: Python Software Foundation
"""

# If true, figures, tables and code-blocks are automatically numbered if 
# they have a caption.
numfig = True

# A dictionary mapping 'figure', 'table', 'code-block' and 'section' to
# strings that are used for format of figure numbers. As a special character,
# %s will be replaced to figure number.
numfig_format = {'figure': 'Figura %s,', 'table': 'Tabla %s,', 'code-block': 'Listado de código de bloque %s,'}

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_immaterial'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "features": [
        "navigation.expand",
        # "navigation.tabs",
        # "navigation.tabs.sticky",
        "toc.integrate",
        # "navigation.sections",
        # "navigation.instant",
        # "header.autohide",
        "navigation.top",
    ],
    # "palette": [
    #     {
    #         # Palette toggle for light mode
    #         "media": "(prefers-color-scheme: light)",
    #         "scheme": "default",
    #         #"primary": "light-green",
    #         #"accent": "light-blue",
    #         "toggle": {
    #             "icon": "material/weather-sunny",
    #             "name": "Cambiar al modo oscuro",
    #         }
    #     },
    #     {
    #         # Palette toggle for dark mode
    #         "media": "(prefers-color-scheme: dark)",
    #         "scheme": "slate",
    #         #"primary": "deep-orange",
    #         #"accent": "light",
    #         "toggle": {
    #             "icon": "material/weather-night",
    #             "name": "Cambiar al modo claro",
    #         }
    #     },
    # ],
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = project_details

# A shorter title for the navigation bar.  Default is the same as html_title.
html_short_title = project_short_name[0].capitalize() + project_short_name[1:39]

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = '_static/python_logo_web.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = '_static/favicon.png'

# A list of CSS files. The entry must be a filename string or a tuple containing
# the filename string and the attributes dictionary. The filename must be relative
# to the html_static_path, or a full URI with scheme like https://example.org/style.css.
# The attributes is used for attributes of <link> tag. It defaults to an empty list.
html_css_files = [
    'https://fonts.googleapis.com/icon?family=Material+Icons',
    'https://fonts.googleapis.com/css?family=Roboto:300,400,500',
    'https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css',
    'stylesheets/landing_page.css',
    'stylesheets/main/layout/_footer.css'
]

# A list of JavaScript filename. The entry must be a filename string or a tuple containing
# the filename string and the attributes dictionary. The filename must be relative to the
# html_static_path, or a full URI with scheme like https://example.org/script.js.
# The attributes is used for attributes of <script> tag. It defaults to an empty list.
html_js_files = [
    'https://code.jquery.com/jquery-latest.min.js',
    # 'javascripts/real_time.js'
]

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%d de %B de %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
html_use_smartypants = True

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = True

# Suffix to be appended to source links (see html_show_sourcelink), unless
# they have this suffix already. Default is '.txt'.
html_sourcelink_suffix = '.rst'

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = 'entrenamiento-python-basico.readthedocs.io'

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None


# -- Extension configuration -------------------------------------------------
